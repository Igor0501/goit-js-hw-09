{"mappings":"iiBA0CA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAC/CG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GACxDA,E,IAIP,SAASS,EAAUC,GACjBC,EAAAf,GAASgB,OAAOC,QAAQH,E,CAG1B,SAASI,EAASC,GAChBJ,EAAAf,GAASgB,OAAOI,QAAQD,E,CApCVE,SAASC,cAAc,QAE/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAMF,IAJA,IAAIrB,EAAQsB,OAAOC,KAAKvB,MAAMU,OACxBc,EAAOF,OAAOC,KAAKC,KAAKd,OACxBe,EAASH,OAAOC,KAAKE,OAAOf,OAEzBgB,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChC5B,EAAc4B,EAAG1B,GAAO2B,KAAKlB,GAAWmB,MAAMd,GAC9Cd,GAASwB,EAGXJ,EAAES,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["// const form = document.querySelector('.form');\n\n// form.addEventListener('submit', onSubmit);\n\n// function onSubmit(event) {\n//   event.preventDefault();\n\n//   const formData = new FormData(event.currentTarget);\n//   const delay = Number(formData.get('delay'));\n//   const step = Number(formData.get('step'));\n//   const amount = Number(formData.get('amount'));\n\n//   let position = 1;\n\n//   for (let i = 0; i < amount; i++) {\n//     createPromise(position, delay)\n//       .then(({ position, delay }) => {\n//         console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//       });\n\n//     position++;\n//     delay += step;\n//   }\n// }\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n    \n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\nimport Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('form');\n\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let delay = Number(this.delay.value);\n  const step = Number(this.step.value);\n  const amount = Number(this.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay).then(onResolve).catch(onReject);\n    delay += step;\n  }\n\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n\nfunction onResolve(value) {\n  Notiflix.Notify.success(value);\n}\n\nfunction onReject(error) {\n  Notiflix.Notify.failure(error);\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","$ce04d3a99e08e73b$var$onResolve","value","$parcel$interopDefault","Notify","success","$ce04d3a99e08e73b$var$onReject","error","failure","document","querySelector","addEventListener","e","preventDefault","Number","this","step","amount","i","then","catch","currentTarget","reset"],"version":3,"file":"03-promises.31e8f2f5.js.map"}