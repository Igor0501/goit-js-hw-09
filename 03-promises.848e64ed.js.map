{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA0CA,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACHH,EACAF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OACjDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAC1DA,E,IAIX,SAASS,EAAUC,GACfC,EAAAf,GAASgB,OAAOC,QAAQH,E,CAG5B,SAASI,EAASC,GACdJ,EAAAf,GAASgB,OAAOI,QAAQD,E,CAzDZE,SAASC,cAAc,QAE/BC,iBAAiB,UAiBzB,SAAsBC,GAClBA,EAAEC,iBAEF,IAAIrB,EAAQsB,OAAOC,KAAKvB,MAAMU,OACxBc,EAAOF,OAAOC,KAAKC,KAAKd,OACxBe,EAASH,OAAOC,KAAKE,OAAOf,OAGF,GAA5BV,EAAQ,GAAKwB,EAAO,GAAKC,GAAU,EAEnC,YADAd,EAAAf,GAASgB,OAAOI,QAAQ,sCAI5B,IAAK,IAAIU,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAC9B5B,EAAc4B,EAAG1B,GAAO2B,KAAKlB,GAAWmB,MAAMd,GAC9Cd,GAASwB,EAGbJ,EAAES,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('form');\n\nformRef.addEventListener('submit', onFormSubmit);\n\n// function onFormSubmit(e) {\n//   e.preventDefault();\n\n//   let delay = Number(this.delay.value);\n//   const step = Number(this.step.value);\n//   const amount = Number(this.amount.value);\n\n//   for (let i = 1; i <= amount; i += 1) {\n//     createPromise(i, delay).then(onResolve).catch(onReject);\n//     delay += step;\n//   }\n\n//   e.currentTarget.reset();\n// }\n\nfunction onFormSubmit(e) {\n    e.preventDefault();\n\n    let delay = Number(this.delay.value);\n    const step = Number(this.step.value);\n    const amount = Number(this.amount.value);\n\n    // Перевіряємо чи всі значення більші за 0\n    if (delay < 0 || step < 0 || amount <= 0) {\n        Notiflix.Notify.failure('Please enter only positive numbers');\n        return;\n    }\n\n    for (let i = 1; i <= amount; i += 1) {\n        createPromise(i, delay).then(onResolve).catch(onReject);\n        delay += step;\n    }\n\n    e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            } else reject(`❌ Rejected promise ${position} in ${delay}ms`);\n        }, delay);\n    });\n}\n\nfunction onResolve(value) {\n    Notiflix.Notify.success(value);\n}\n\nfunction onReject(error) {\n    Notiflix.Notify.failure(error);\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","$ce04d3a99e08e73b$var$onResolve","value","$parcel$interopDefault","Notify","success","$ce04d3a99e08e73b$var$onReject","error","failure","document","querySelector","addEventListener","e","preventDefault","Number","this","step","amount","i","then","catch","currentTarget","reset"],"version":3,"file":"03-promises.848e64ed.js.map"}